[
    {
        "name": "",
        "run": false,
        "tests": [
            {
                "ar": []
            },
            {
                "kw": {}
            }
        ]
    },
    {
        "name": "remove_duplicates",
        "run": false,
        "tests": [
            {
                "ar": [],
                "kw": {"a": [1,1,2,2,2]}
            }
        ]
    },
    {
        "name": "create_subsets_iterative",
        "run": false,
        "tests": [
            {
                "ar": [],
                "kw": {"a": [1,2,5]}
            }
        ]
    },
    {
        "name": "create_consecutive_subsets_iterative",
        "run": false,
        "tests": [
            {
                "ar": [],
                "kw": {"a": [1,2,5]}
            }
        ]
    }, 
    {
        "name": "grid_traveller_iterative",
        "run": false,
        "tests": [
            {
                "ar": [2,2]
                
            },
            {
                "ar": [2,3]
            },
            {
                "ar": [3,3]
            },
            {
                "ar": [3,4]
            }
        ],
        "res_msg": "Total ways to reach the target="
    },
    {
        "name": "grid_traveller_recursive",
        "run": false,
        "tests": [
            {
                "ar": [2,2]
            },
            {
                "ar": [2,3]
            },
            {
                "ar": [3,3]
            },
            {
                "ar": [3,4]
            }
        ],
        "res_msg": "Total ways to reach the target="
    },
    {
        "name": "permutation",
        "run": false,
        "tests": [{
            "kw": {"s": "ab"}
        }]
    },
    {
        "name": "split_string",
        "run": false,
        "tests": [
            {
                "kw": {"s": "1234", "total_spaces": 2}
            }
        ]
    },
    {
        "name": "split_string_iterative",
        "run": false,
        "tests": [
            {
                "kw": {"s": "1234", "total_spaces": 2}
            }
        ]
    },
    {
        "name": "can_contruct_from_vocabulary",
        "run": false,
        "tests": [
            {
                "kw": {
                    "word": "xyz",
                    "vocabs": ["abc", "cde", "d", "de"],
                    "stripped_word": "xyz"
                }
            },
            {
                "kw": {
                    "word": "abcde",
                    "vocabs": ["abc", "cde", "d", "de"],
                    "stripped_word": "abcde"
                }
            },
            {
                "kw": {
                    "word": "cdedde",
                    "vocabs": ["abc", "cde", "d", "de"],
                    "stripped_word": "cdedde"
                }
            }
        ]
    },
    {
        "name": "divisible_nondivisible_sum_diff",
        "run": false,
        "tests": [
            {
                "ar": [10,3]
            },
            {
                "ar": [5,6]
            },
            {
                "ar": [5,1]
            }
        ]
    },
    {
        "name": "min_processing_time",
        "run": false,
        "tests": [
            {
                "ar": [[8,10], [2,2,3,1,8,7,4,5]]
            },
            {
                "ar": [[10,20], [2,3,1,2,5,8,4,3]]
            }
        ]
    },
    {
        "name": "split_string_with_binary_patterns",
        "run": false,
        "tests": [
            {
                "ar": ["123", 1]
            }
        ]
    },
    {
        "name": "two_groups",
        "run": false,
        "tests": [
            {
                "ar": [[1,2,3,4], 2]
            }
        ]
    },
    {
        "name": "n_groups",
        "run": false,
        "tests": [
            {
                "ar": [[1,2,3,4], 2]
            },
            {
                "ar": [[1,2,3,4,5,6], 3]
            }
        ]
    },
    {
        "name": "island",
        "run": false,
        "tests": [
            {
                "kw": {"arr": [[1]]}
            },
            {
                "kw": {"arr": [[1, 0], [1,1]]}
            },
            {
                "kw": {"arr": [[1, 0], [0, 1]]}
            },
            {
                "kw": {"arr": [[1, 1], [1, 1]]}
            },
            {
                "kw": {"arr": [[1, 0, 1], [1, 0, 1], [1, 0, 1]]}
            },
            {
                "kw": {"arr": [[1, 1, 1], [0, 0, 0], [1, 1, 1]]}
            },
            {
                "kw": {"arr": [[1, 1, 1, 1], [0,0,1,0], [0,0,0,0], [1,1,1,1]]}
            },
            {
                "kw": {"arr": [[1,1,1,1,0],[1,1,0,1,0],[1,1,0,0,0],[0,0,0,0,0]]}
            },
            {
                "kw": {"arr": [[1,1,1],[0,1,0],[1,1,1]]}
            },
            {
                "kw": {
                    "arr": [["1","1","1","1","1","0","1","1","1","1"],["1","0","1","0","1","1","1","1","1","1"],["0","1","1","1","0","1","1","1","1","1"],["1","1","0","1","1","0","0","0","0","1"],["1","0","1","0","1","0","0","1","0","1"],["1","0","0","1","1","1","0","1","0","0"],["0","0","1","0","0","1","1","1","1","0"],["1","0","1","1","1","0","0","1","1","1"],["1","1","1","1","1","1","1","1","0","1"],["1","0","1","1","1","1","1","1","1","0"]]
                }
            }
        ]
    },
    {
        "name": "cpu_min_time",
        "run": true,
        "tests": [
            {"ar": [["A", "B", "A", "C", "B", "A"], 2]}
        ]
    }

]